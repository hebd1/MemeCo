@{
    ViewData["Title"] = "Main Feed";
}
@using Microsoft.AspNetCore.Identity
@using System.IO
@using Microsoft.AspNetCore.Http;
@using MemeCo.Areas.Identity.Data
@model IEnumerable<MemeCo.Models.Post>
@inject UserManager<MemeCoUser> userManager


<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@ViewData["Title"] - Index</title>
    <meta name="description" content="Main Feed of the Meme.co meme viewer">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="author" content="Eli Hebdon u0871009">
    <meta name="keywords" content="HTML, CSS, Meme.co, memes">
    <script src="https://kit.fontawesome.com/50d38ee57a.js"></script>
</head>

<body>

    <div id="posts">
        @foreach (var post in Model)
        {
            var user = post.User;
            var base64 = Convert.ToBase64String(post.Meme);
            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
            double likes = post.Likes.Where(o => o.Liked == true).Count();
            double dislikes = post.Likes.Where(o => o.Liked == false).Count();
            var likePercent = "";
            var dislikePercent = "";
            if (likes > 0)
            {
                likePercent = Math.Ceiling(likes / (likes + dislikes) * 100) + "%";
            }
            if (dislikes > 0)
            {
                dislikePercent = Math.Ceiling(dislikes / (likes + dislikes) * 100) + "%";
            }
            <div class="post mx-auto">
                <div class="card mx-auto" style="width: 30rem;">
                    <div class="mx-auto">
                        <img class="card-img-top" src="@imgSrc" alt="Card image cap">
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@user.UserName</h5>
                        <p class="card-text">@post.Description</p>
                        <hr />
                        @* Post was liked by current logged in user *@
                        @if (userManager.GetUserId(this.User) != null && post.Likes.Any(o => o.MemeCoUserID == userManager.GetUserId(this.User)))
                        {
                            var reaction = post.Likes.Where(o => o.MemeCoUserID == userManager.GetUserId(this.User)).First();
                            <div class="like_buttons">
                                <a href="#" class="btn btn-primary" onclick="handle_change(this, '@userManager.GetUserId(this.User)', 'true', '@post.ID', event)">
                                    @if (reaction.Liked == true)
                                    {
                                        <i id="@post.ID-like" class="fas fa-thumbs-up"></i>
                                    }
                                    else
                                    {
                                        <i id="@post.ID-like" class="far fa-thumbs-up"></i>
                                    }
                                </a>
                                <a href="#" class="btn btn-danger" onclick="handle_change(this, '@userManager.GetUserId(this.User)', 'false', '@post.ID', event)">
                                    @if (reaction.Liked == false)
                                    {
                                        <i id="@post.ID-dislike" class="fas fa-thumbs-down"></i>
                                    }
                                    else
                                    {
                                        <i id="@post.ID-dislike" class="far fa-thumbs-down"></i>
                                    }
                                </a>
                                <div class="progress">
                                    <div id="@post.ID-like-percent" class="progress-bar bg-primary" style="width:@likePercent">
                                        @likePercent
                                    </div>
                                    <div id="@post.ID-dislike-percent" class="progress-bar bg-danger" style="width:@dislikePercent">
                                        @dislikePercent
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="like_buttons">
                                <a href="#" class="btn btn-primary" onclick="handle_change(this, '@userManager.GetUserId(this.User)', 'true', '@post.ID', event)">
                                        <i id="@post.ID-like" class="far fa-thumbs-up"></i>

                                <a href="#" class="btn btn-danger" onclick="handle_change(this, '@userManager.GetUserId(this.User)', 'false', '@post.ID', event)">
                                        <i id="@post.ID-dislike" class="far fa-thumbs-down"></i>
                                </a>
                                <div class="progress">
                                    <div id="@post.ID-like-percent" class="progress-bar bg-primary" style="width:@likePercent">
                                        @likePercent
                                    </div>
                                    <div id="@post.ID-dislike-percent" class="progress-bar bg-danger" style="width:@dislikePercent">
                                        @dislikePercent
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>

        }
    </div>


</body>
</html>

@section Scripts  {
    <script src="~/js/likeDislike.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/8.11.8/sweetalert2.all.min.js"></script>

}
