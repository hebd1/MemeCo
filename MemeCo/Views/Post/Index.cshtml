
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Microsoft.AspNetCore.Identity
@using MemeCo.Areas.Identity.Data
@model Post
@inject UserManager<MemeCoUser> userManager
@inject SignInManager<MemeCoUser> SignInManager

@{
    MemeCoUser currentUser = new MemeCoUser();
    if (this.User.Identity.Name != null)
    {
        currentUser = await userManager.FindByNameAsync(this.User.Identity.Name);
    }
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@ViewData["Title"] - Index</title>
    <meta name="description" content="Individual Meme Page">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="author" content="Jasen Lassig u0671257">
    <meta name="keywords" content="HTML, CSS, Meme.co, memes">
    <script src="https://kit.fontawesome.com/50d38ee57a.js"></script>
</head>

<body>
    @{
        var post = @Model;
        var user = post.User;
        var imgSrc = String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(post.Meme));
        var profileSrc = String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(post.User.ProfilePicture));
        double likes = post.Likes.Where(o => o.Liked == true).Count();
        double dislikes = post.Likes.Where(o => o.Liked == false).Count();
        var likePercent = (likes > 0) ? Math.Ceiling(likes / (likes + dislikes) * 100) + "%" : "";
        var dislikePercent = (dislikes > 0) ? Math.Ceiling(dislikes / (likes + dislikes) * 100) + "%" : "";

        <div class="post mx-auto">
            <div class="card mx-auto" style="width: 40rem;">
                <div class="card-title post-header row">
                    <a href="/@user.UserName">
                        <img class="profile-pic rounded-circle" src="@profileSrc" width="50" height="50">
                    </a>
                    <a href="/@user.UserName" class="post-username">@user.UserName</a>
                </div>
                <div class="mx-auto">
                    <img class="card-img-top" src="@imgSrc" alt="Card image cap">
                </div>
                <div class="card-body">
                    @* Post was liked by current logged in user *@
                    @if (this.User.Identity.Name != null && post.Likes.Any(o => o.MemeCoUserID == currentUser.Id))
                    {
                        var reaction = post.Likes.Where(o => o.MemeCoUserID == currentUser.Id).First();
                        <div class="row no-gutters">
                            <div class="like_buttons col-8">
                                <a href="#" class="btn btn-primary" onclick="handle_change(this, '@currentUser.Id', 'true', '@post.ID', event)">
                                    @if (reaction.Liked == true)
                                    {
                                        <i id="@post.ID-like" class="fas fa-thumbs-up"></i>
                                    }
                                    else
                                    {
                                        <i id="@post.ID-like" class="far fa-thumbs-up"></i>
                                    }
                                </a>
                                <a href="#" class="btn btn-danger" onclick="handle_change(this, '@currentUser.Id', 'false', '@post.ID', event)">
                                    @if (reaction.Liked == false)
                                    {
                                        <i id="@post.ID-dislike" class="fas fa-thumbs-down"></i>
                                    }
                                    else
                                    {
                                        <i id="@post.ID-dislike" class="far fa-thumbs-down"></i>
                                    }
                                </a>
                            </div>
                            <div class="col">
                                <div class="progress">
                                    <div id="@post.ID-like-percent" class="progress-bar bg-primary" style="width:@likePercent" aria-valuemin="0" aria-valuemax="100">
                                        @likePercent
                                    </div>
                                    <div id="@post.ID-dislike-percent" class="progress-bar bg-danger" style="width:@dislikePercent" aria-valuemin="0" aria-valuemax="100">
                                        @dislikePercent
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <p class="card-text">@post.Description</p>
                    }
                    @*User not logged in*@
                    else
                    {
                        <div class="row no-gutters">
                            <div class="like_buttons col-8">
                                <a href="#" class="btn btn-primary" onclick="handle_change(this, '@currentUser.Id', 'true', '@post.ID', event)">
                                    <i id="@post.ID-like" class="fas fa-thumbs-up"></i>
                                </a>
                                <a href="#" class="btn btn-danger" onclick="handle_change(this, '@currentUser.Id', 'false', '@post.ID', event)">
                                    <i id="@post.ID-dislike" class="fas fa-thumbs-down"></i>
                                </a>
                            </div>
                            <div class="col">
                                <div class="progress">
                                    <div id="@post.ID-like-percent" class="progress-bar bg-primary" style="width:@likePercent" aria-valuemin="0" aria-valuemax="100">
                                        @likePercent
                                    </div>
                                    <div id="@post.ID-dislike-percent" class="progress-bar bg-danger" style="width:@dislikePercent" aria-valuemin="0" aria-valuemax="100">
                                        @dislikePercent
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <p class="card-text">@post.Description</p>
                    }
                    <br />
                    <hr />

                    @{
                        int location = 1;

                        // Checking if the current user has a comment in the post
                        bool hasComment = false;
                        foreach (var comment in post.Comments)
                        {
                            if (comment.User.Id.Equals(currentUser.Id))
                            {
                                hasComment = true;
                            }
                        }

                        if (!hasComment && currentUser.UserName != null)
                        {
                            // Add Comment
                            <div id="add" class="card">
                                <h5 class="card-header">
                                    Add a Comment
                                </h5>
                                <div class="card-body">
                                    <form onsubmit="add_comment('@post.ID', '@currentUser.Id', event)" asp-action="add_comment" method="post">
                                        <textarea id="newnote" name="newnote" class="card-text" rows="4" cols="73"></textarea>
                                        <br />
                                        <input class="btn my-2 my-sm-0 btn-sm navb" type="submit" value="Add">
                                    </form>
                                </div>
                            </div>
                            <br />
                        }

                        <div id="placeHolder"></div>

                        // Display All Comments
                        foreach (var comment in post.Comments.Reverse())
                        {
                            string description = comment.Content;
                            string username = comment.User.UserName;
                            string profilePic = String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(comment.User.ProfilePicture));
                            string time = comment.TimeCommented.ToString();

                            if (comment.User == currentUser)
                            {
                                // Edit and delete own user comments
                                <div class="card" id="@location">
                                    <h5 class="card-header">
                                        <a href="/@username">
                                            <img class="profile-pic rounded-circle" src="@profilePic" width="50" height="50">
                                            @username
                                        </a>
                                    </h5>

                                    <div class="card-body">
                                        <form onsubmit="edit_comment('@comment.ID', event)" asp-action="edit_comment" method="post">
                                            <textarea onkeydown="change_edit()" id="note" name="note" class="card-text" rows="4" cols="73">@description</textarea>
                                            <br />
                                            <input id="editBtn" class="btn my-2 my-sm-0 btn-sm navb" type="submit" value="Save">
                                        </form>

                                        <button class="btn my-2 my-sm-0 btn-sm navb"
                                                onclick="delete_comment('@comment.ID', '@location', event, '@post.ID', '@currentUser.Id')">
                                            Delete
                                        </button>
                                    </div>
                                </div>
                                <br />
                            }
                            else
                            {
                                // Displaying the comment without editing or deleting buttons
                                <div class="card">
                                    <h5 class="card-header">
                                        <a href="/@username">
                                            <img class="profile-pic rounded-circle" src="@profilePic" width="50" height="50">
                                            @username
                                        </a>

                                        <div id="time">
                                            <br />
                                            @time
                                        </div>
                                    </h5>
                                    <div class="card-body">
                                        <p class="card-text">@description</p>
                                    </div>
                                </div>
                                <br />
                            }
                            location++;
                        }
                    }
                </div>
            </div>

            @{ 
                // Null Template ID Check
                int templateID;
                if (post.TemplateID == null)
                {
                    templateID = -1;
                }
                else
                {
                    templateID = post.TemplateID.Value;
                }

                @await Component.InvokeAsync("Related", new { templateID = templateID, post = post, isEditor = false });
            }
        </div>

    }
</body>
</html>
<script type="text/javascript" src="~/js/comments.js"></script>
<script src="~/js/likeDislike.js"></script>