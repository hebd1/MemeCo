
@using Microsoft.AspNetCore.Identity
@using System.IO
@using Microsoft.AspNetCore.Http;
@using MemeCo.Areas.Identity.Data
@model IEnumerable<MemeCo.Models.Template>
@inject UserManager<MemeCoUser> userManager
@{
    ViewData["Title"] = "Index";
    var currentUser = await userManager.FindByNameAsync(this.User.Identity.Name);
    var templateId = -1;


}


<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@ViewData["Title"] - Index</title>
    <meta name="description" content="Main Feed of the Meme.co meme viewer">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="author" content="Eli Hebdon u0871009">
    <meta name="keywords" content="HTML, CSS, Meme.co, memes">
    <script src="https://kit.fontawesome.com/50d38ee57a.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="~/js/html2canvas.js"></script>
    <script type="text/javascript" src="~/js/jquery.textover.js"></script>
    <script type="text/javascript" src="~/js/postMeme.js"></script>
    <script type="text/javascript" src="~/js/select_layout.js"></script>
    <script type="text/javascript" src="~/js/site.js"></script>
</head>

<body>
    <div class="container">
        <div class="row" id="editor-window">
            <div class="">
                <div id="image" class="justify-content-center">
                    <img id="meme-content" alt="Demo Image" class="img-fluid meme-class" src="~/files/img_placeholder.png">
                </div>

            </div>
            <div class="toolbar col-6">
                <div class="form-group form-inline d-flex justify-content-around">
                    <div class="row float-left">
                        <label id="font-size-label" for="exampleFormControlSelect1">Font-Size: </label>
                        <select class="form-control" id="font-size-selector">
                            <option value="8">8</option>
                            <option value="12">12</option>
                            <option value="18">18</option>
                            <option value="24">24</option>
                            <option value="36">36</option>
                            <option value="48">48</option>
                        </select>
                    </div>
                    <label id="text-color-label" for="exampleFormControlSelect1">Text Color: </label>
                    <button id="black-text-btn" type="button" class="btn btn-dark" onclick="textBlack()">Black</button>
                    <button id="white-text-btn" type="button" class="btn btn-outline-secondary" onclick="textWhite()">White</button>
                    <button id="insert-text-btn" type="button" class="btn btn-outline-primary float-right" data-toggle="tooltip" data-placement="bottom" title="when enabled, click on the image to insert a block of text. Press esc to undo an insert." onclick="insertText()">Insert Text</button>

                </div>

                <br />
                <div id="format-btns" class="row form-inline d-flex justify-content-around">
                    <label id="layout-label" for="exampleFormControlSelect1">Layout: </label>
                    <button id="single-image-btn" type="button" class="btn btn-primary" onclick="select_layout('single-image-btn')">single image</button>
                    <button id="image-top-btn" type="button" class="btn btn-outline-primary" onclick="select_layout('image-top-btn')">image top</button>
                    <button id="image-bottom-btn" type="button" class="btn btn-outline-primary" onclick="select_layout('image-bottom-btn')">image bottom</button>
                </div>

                <!-- Meme templates-->
                <div id="meme-templates">
                    <div class="template-scroller">
                        @{
                            foreach (var template in Model)
                            {
                                var imgSrc = String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(template.Content));

                                <div class="template" style="width: 10rem" onclick="selectTemplate('@imgSrc', '@template.ID')">
                                    <img class="img-fluid" src="@imgSrc" alt="Card image cap">
                                </div>
                            }
                        }
                    </div>


                </div>

                <div>
                    <div id="msg"></div>
                    <form method="post" id="image-form">
                        <input type="file" name="img[]" class="file" accept="image/*">
                        <div class="input-group my-3">
                            <input type="text" class="form-control" disabled placeholder="Upload File" id="file">
                            <div class="input-group-append">
                                <button type="button" class="browse btn btn-primary">Upload</button>
                            </div>
                        </div>
                    </form>
                </div>

                <button id="preview-btn" type="button" class="btn btn-primary" onclick="showPreview()">Export</button>



                <!-- Modal -->
                <div class="modal fade" id="previewModal" tabindex="-1" role="dialog" aria-labelledby="Preview" aria-hidden="true">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLongTitle">Preview</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body row justify-content-center">
                                <canvas width="535" height="401" style="width: 535px; height: 401px;"></canvas>
                            </div>
                            <div id="description-box" class="form-group">
                                <label for="message-text" class="col-form-label">Caption:</label>
                                <textarea class="form-control" id="caption-text"></textarea>
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" onclick="post_meme(this, '@currentUser.Id', '@templateId', event)">Post to MemeCo</button>
                                <button id="download-btn" type="button" class="btn btn-primary" onclick="download()">
                                    <a id="btn-Convert-Html2Image" href="#">
                                        Download
                                    </a>
                                </button>
                            </div>
                        </div>
                    </div>

                </div>



            </div>

        </div>
        <div id="related">
                @await Component.InvokeAsync("Related", new { templateID = -1, post = new Post(), isEditor = true })
        </div>
    </div>

</body>
</html>


<script id="text-over-script" type="text/javascript">

    jQuery(function ($) {

        var textover_api;

        $('#image').TextOver({}, function () {
            console.log("text over");
            textover_api = this;
           
        });

        $('#show').click(function () {
            html = '';
            $.each(textover_api.getData(), function () {
                html += 'Text &raquo; ' + this.text + ' Left &raquo; ' + this.left + ' Top &raquo; ' + this.top + '<br />';
            });
            $('#data').html(html).show();
        });

    });

      $(document).on("click", ".browse", function () {
        var file = $(this).parents().find(".file");
        file.trigger("click");
    });
    $('input[type="file"]').change(function (e) {
        var fileName = e.target.files[0].name;
        $("#file").val(fileName);

        var reader = new FileReader();
        reader.onload = function (e) {
            // get loaded data and render thumbnail.
            document.getElementById("meme-content").src = e.target.result;
        };
        // read the image file as a data URL.
        reader.readAsDataURL(this.files[0]);
    });



</script>